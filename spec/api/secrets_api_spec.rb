=begin
#KeyVaultClient

#The key vault client performs cryptographic key operations and vault operations against the Key Vault service.

OpenAPI spec version: 7.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.15

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::SecretsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'SecretsApi' do
  before do
    # run before each test
    @instance = SwaggerClient::SecretsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SecretsApi' do
    it 'should create an instance of SecretsApi' do
      expect(@instance).to be_instance_of(SwaggerClient::SecretsApi)
    end
  end

  # unit tests for backup_secret
  # Backs up the specified secret.
  # Requests that a backup of the specified secret be downloaded to the client. All versions of the secret will be downloaded. This operation requires the secrets/backup permission.
  # @param secret_name The name of the secret.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @return [BackupSecretResult]
  describe 'backup_secret test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_secret
  # Deletes a secret from a specified key vault.
  # The DELETE operation applies to any secret stored in Azure Key Vault. DELETE cannot be applied to an individual version of a secret. This operation requires the secrets/delete permission.
  # @param secret_name The name of the secret.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @return [DeletedSecretBundle]
  describe 'delete_secret test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_secret
  # Get a specified secret from a given key vault.
  # The GET operation is applicable to any secret stored in Azure Key Vault. This operation requires the secrets/get permission.
  # @param secret_name The name of the secret.
  # @param secret_version The version of the secret. This URI fragment is optional. If not specified, the latest version of the secret is returned.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @return [SecretBundle]
  describe 'get_secret test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_secret_versions
  # List all versions of the specified secret.
  # The full secret identifier and attributes are provided in the response. No values are returned for the secrets. This operations requires the secrets/list permission.
  # @param secret_name The name of the secret.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :maxresults Maximum number of results to return in a page. If not specified, the service will return up to 25 results.
  # @return [SecretListResult]
  describe 'get_secret_versions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_secrets
  # List secrets in a specified key vault.
  # The Get Secrets operation is applicable to the entire vault. However, only the base secret identifier and its attributes are provided in the response. Individual secret versions are not listed in the response. This operation requires the secrets/list permission.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :maxresults Maximum number of results to return in a page. If not specified, the service will return up to 25 results.
  # @return [SecretListResult]
  describe 'get_secrets test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for restore_secret
  # Restores a backed up secret to a vault.
  # Restores a backed up secret, and all its versions, to a vault. This operation requires the secrets/restore permission.
  # @param parameters The parameters to restore the secret.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @return [SecretBundle]
  describe 'restore_secret test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_secret
  # Sets a secret in a specified key vault.
  #  The SET operation adds a secret to the Azure Key Vault. If the named secret already exists, Azure Key Vault creates a new version of that secret. This operation requires the secrets/set permission.
  # @param secret_name The name of the secret.
  # @param parameters The parameters for setting the secret.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @return [SecretBundle]
  describe 'set_secret test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_secret
  # Updates the attributes associated with a specified secret in a given key vault.
  # The UPDATE operation changes specified attributes of an existing stored secret. Attributes that are not specified in the request are left unchanged. The value of a secret itself cannot be changed. This operation requires the secrets/set permission.
  # @param secret_name The name of the secret.
  # @param secret_version The version of the secret.
  # @param parameters The parameters for update secret operation.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @return [SecretBundle]
  describe 'update_secret test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
