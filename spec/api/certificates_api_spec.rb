=begin
#KeyVaultClient

#The key vault client performs cryptographic key operations and vault operations against the Key Vault service.

OpenAPI spec version: 7.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.15

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::CertificatesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CertificatesApi' do
  before do
    # run before each test
    @instance = SwaggerClient::CertificatesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CertificatesApi' do
    it 'should create an instance of CertificatesApi' do
      expect(@instance).to be_instance_of(SwaggerClient::CertificatesApi)
    end
  end

  # unit tests for backup_certificate
  # Backs up the specified certificate.
  # Requests that a backup of the specified certificate be downloaded to the client. All versions of the certificate will be downloaded. This operation requires the certificates/backup permission.
  # @param certificate_name The name of the certificate.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @return [BackupCertificateResult]
  describe 'backup_certificate test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_certificate
  # Creates a new certificate.
  # If this is the first version, the certificate resource is created. This operation requires the certificates/create permission.
  # @param certificate_name The name of the certificate.
  # @param parameters The parameters to create a certificate.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @return [CertificateOperation]
  describe 'create_certificate test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_certificate
  # Deletes a certificate from a specified key vault.
  # Deletes all versions of a certificate object along with its associated policy. Delete certificate cannot be used to remove individual versions of a certificate object. This operation requires the certificates/delete permission.
  # @param certificate_name The name of the certificate.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @return [DeletedCertificateBundle]
  describe 'delete_certificate test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_certificate_contacts
  # Deletes the certificate contacts for a specified key vault.
  # Deletes the certificate contacts for a specified key vault certificate. This operation requires the certificates/managecontacts permission.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @return [Contacts]
  describe 'delete_certificate_contacts test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_certificate_issuer
  # Deletes the specified certificate issuer.
  # The DeleteCertificateIssuer operation permanently removes the specified certificate issuer from the vault. This operation requires the certificates/manageissuers/deleteissuers permission.
  # @param issuer_name The name of the issuer.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @return [IssuerBundle]
  describe 'delete_certificate_issuer test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_certificate_operation
  # Deletes the creation operation for a specific certificate.
  # Deletes the creation operation for a specified certificate that is in the process of being created. The certificate is no longer created. This operation requires the certificates/update permission.
  # @param certificate_name The name of the certificate.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @return [CertificateOperation]
  describe 'delete_certificate_operation test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_certificate
  # Gets information about a certificate.
  # Gets information about a specific certificate. This operation requires the certificates/get permission.
  # @param certificate_name The name of the certificate in the given vault.
  # @param certificate_version The version of the certificate. This URI fragment is optional. If not specified, the latest version of the certificate is returned.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @return [CertificateBundle]
  describe 'get_certificate test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_certificate_contacts
  # Lists the certificate contacts for a specified key vault.
  # The GetCertificateContacts operation returns the set of certificate contact resources in the specified key vault. This operation requires the certificates/managecontacts permission.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @return [Contacts]
  describe 'get_certificate_contacts test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_certificate_issuer
  # Lists the specified certificate issuer.
  # The GetCertificateIssuer operation returns the specified certificate issuer resources in the specified key vault. This operation requires the certificates/manageissuers/getissuers permission.
  # @param issuer_name The name of the issuer.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @return [IssuerBundle]
  describe 'get_certificate_issuer test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_certificate_issuers
  # List certificate issuers for a specified key vault.
  # The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault. This operation requires the certificates/manageissuers/getissuers permission.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :maxresults Maximum number of results to return in a page. If not specified the service will return up to 25 results.
  # @return [CertificateIssuerListResult]
  describe 'get_certificate_issuers test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_certificate_operation
  # Gets the creation operation of a certificate.
  # Gets the creation operation associated with a specified certificate. This operation requires the certificates/get permission.
  # @param certificate_name The name of the certificate.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @return [CertificateOperation]
  describe 'get_certificate_operation test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_certificate_policy
  # Lists the policy for a certificate.
  # The GetCertificatePolicy operation returns the specified certificate policy resources in the specified key vault. This operation requires the certificates/get permission.
  # @param certificate_name The name of the certificate in a given key vault.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @return [CertificatePolicy]
  describe 'get_certificate_policy test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_certificate_versions
  # List the versions of a certificate.
  # The GetCertificateVersions operation returns the versions of a certificate in the specified key vault. This operation requires the certificates/list permission.
  # @param certificate_name The name of the certificate.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :maxresults Maximum number of results to return in a page. If not specified the service will return up to 25 results.
  # @return [CertificateListResult]
  describe 'get_certificate_versions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_certificates
  # List certificates in a specified key vault
  # The GetCertificates operation returns the set of certificates resources in the specified key vault. This operation requires the certificates/list permission.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :maxresults Maximum number of results to return in a page. If not specified the service will return up to 25 results.
  # @option opts [BOOLEAN] :include_pending Specifies whether to include certificates which are not completely provisioned.
  # @return [CertificateListResult]
  describe 'get_certificates test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for import_certificate
  # Imports a certificate into a specified key vault.
  # Imports an existing valid certificate, containing a private key, into Azure Key Vault. The certificate to be imported can be in either PFX or PEM format. If the certificate is in PEM format the PEM file must contain the key as well as x509 certificates. This operation requires the certificates/import permission.
  # @param certificate_name The name of the certificate.
  # @param parameters The parameters to import the certificate.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @return [CertificateBundle]
  describe 'import_certificate test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for merge_certificate
  # Merges a certificate or a certificate chain with a key pair existing on the server.
  # The MergeCertificate operation performs the merging of a certificate or certificate chain with a key pair currently available in the service. This operation requires the certificates/create permission.
  # @param certificate_name The name of the certificate.
  # @param parameters The parameters to merge certificate.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @return [CertificateBundle]
  describe 'merge_certificate test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for restore_certificate
  # Restores a backed up certificate to a vault.
  # Restores a backed up certificate, and all its versions, to a vault. This operation requires the certificates/restore permission.
  # @param parameters The parameters to restore the certificate.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @return [CertificateBundle]
  describe 'restore_certificate test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_certificate_contacts
  # Sets the certificate contacts for the specified key vault.
  # Sets the certificate contacts for the specified key vault. This operation requires the certificates/managecontacts permission.
  # @param contacts The contacts for the key vault certificate.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @return [Contacts]
  describe 'set_certificate_contacts test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_certificate_issuer
  # Sets the specified certificate issuer.
  # The SetCertificateIssuer operation adds or updates the specified certificate issuer. This operation requires the certificates/setissuers permission.
  # @param issuer_name The name of the issuer.
  # @param parameter Certificate issuer set parameter.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @return [IssuerBundle]
  describe 'set_certificate_issuer test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_certificate
  # Updates the specified attributes associated with the given certificate.
  # The UpdateCertificate operation applies the specified update on the given certificate; the only elements updated are the certificate&#39;s attributes. This operation requires the certificates/update permission.
  # @param certificate_name The name of the certificate in the given key vault.
  # @param certificate_version The version of the certificate.
  # @param parameters The parameters for certificate update.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @return [CertificateBundle]
  describe 'update_certificate test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_certificate_issuer
  # Updates the specified certificate issuer.
  # The UpdateCertificateIssuer operation performs an update on the specified certificate issuer entity. This operation requires the certificates/setissuers permission.
  # @param issuer_name The name of the issuer.
  # @param parameter Certificate issuer update parameter.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @return [IssuerBundle]
  describe 'update_certificate_issuer test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_certificate_operation
  # Updates a certificate operation.
  # Updates a certificate creation operation that is already in progress. This operation requires the certificates/update permission.
  # @param certificate_name The name of the certificate.
  # @param certificate_operation The certificate operation response.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @return [CertificateOperation]
  describe 'update_certificate_operation test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_certificate_policy
  # Updates the policy for a certificate.
  # Set specified members in the certificate policy. Leave others as null. This operation requires the certificates/update permission.
  # @param certificate_name The name of the certificate in the given vault.
  # @param certificate_policy The policy for the certificate.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @return [CertificatePolicy]
  describe 'update_certificate_policy test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
