=begin
#KeyVaultClient

#The key vault client performs cryptographic key operations and vault operations against the Key Vault service.

OpenAPI spec version: 7.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.15

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::StorageApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'StorageApi' do
  before do
    # run before each test
    @instance = SwaggerClient::StorageApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of StorageApi' do
    it 'should create an instance of StorageApi' do
      expect(@instance).to be_instance_of(SwaggerClient::StorageApi)
    end
  end

  # unit tests for backup_storage_account
  # Backs up the specified storage account.
  # Requests that a backup of the specified storage account be downloaded to the client. This operation requires the storage/backup permission.
  # @param storage_account_name The name of the storage account.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @return [BackupStorageResult]
  describe 'backup_storage_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_sas_definition
  # Deletes a SAS definition from a specified storage account. This operation requires the storage/deletesas permission.
  # @param storage_account_name The name of the storage account.
  # @param sas_definition_name The name of the SAS definition.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @return [DeletedSasDefinitionBundle]
  describe 'delete_sas_definition test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_storage_account
  # Deletes a storage account. This operation requires the storage/delete permission.
  # @param storage_account_name The name of the storage account.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @return [DeletedStorageBundle]
  describe 'delete_storage_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_sas_definition
  # Gets information about a SAS definition for the specified storage account. This operation requires the storage/getsas permission.
  # @param storage_account_name The name of the storage account.
  # @param sas_definition_name The name of the SAS definition.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @return [SasDefinitionBundle]
  describe 'get_sas_definition test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_sas_definitions
  # List storage SAS definitions for the given storage account. This operation requires the storage/listsas permission.
  # @param storage_account_name The name of the storage account.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :maxresults Maximum number of results to return in a page. If not specified the service will return up to 25 results.
  # @return [SasDefinitionListResult]
  describe 'get_sas_definitions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_storage_account
  # Gets information about a specified storage account. This operation requires the storage/get permission.
  # @param storage_account_name The name of the storage account.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @return [StorageBundle]
  describe 'get_storage_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_storage_accounts
  # List storage accounts managed by the specified key vault. This operation requires the storage/list permission.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :maxresults Maximum number of results to return in a page. If not specified the service will return up to 25 results.
  # @return [StorageListResult]
  describe 'get_storage_accounts test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for regenerate_storage_account_key
  # Regenerates the specified key value for the given storage account. This operation requires the storage/regeneratekey permission.
  # @param storage_account_name The name of the storage account.
  # @param parameters The parameters to regenerate storage account key.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @return [StorageBundle]
  describe 'regenerate_storage_account_key test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for restore_storage_account
  # Restores a backed up storage account to a vault.
  # Restores a backed up storage account to a vault. This operation requires the storage/restore permission.
  # @param parameters The parameters to restore the storage account.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @return [StorageBundle]
  describe 'restore_storage_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_sas_definition
  # Creates or updates a new SAS definition for the specified storage account. This operation requires the storage/setsas permission.
  # @param storage_account_name The name of the storage account.
  # @param sas_definition_name The name of the SAS definition.
  # @param parameters The parameters to create a SAS definition.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @return [SasDefinitionBundle]
  describe 'set_sas_definition test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_storage_account
  # Creates or updates a new storage account. This operation requires the storage/set permission.
  # @param storage_account_name The name of the storage account.
  # @param parameters The parameters to create a storage account.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @return [StorageBundle]
  describe 'set_storage_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_sas_definition
  # Updates the specified attributes associated with the given SAS definition. This operation requires the storage/setsas permission.
  # @param storage_account_name The name of the storage account.
  # @param sas_definition_name The name of the SAS definition.
  # @param parameters The parameters to update a SAS definition.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @return [SasDefinitionBundle]
  describe 'update_sas_definition test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_storage_account
  # Updates the specified attributes associated with the given storage account. This operation requires the storage/set/update permission.
  # @param storage_account_name The name of the storage account.
  # @param parameters The parameters to update a storage account.
  # @param api_version Client API version.
  # @param [Hash] opts the optional parameters
  # @return [StorageBundle]
  describe 'update_storage_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
